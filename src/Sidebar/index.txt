import {cloneElement, useContext, createContext, useState} from 'react'
// function NavbarUsage() {
//   return (
//     <Navbar>
//       <NavItem route="/dashboard">
//         <p>Dashboard</p>
//       </NavItem>
//       <NavItem route="/clients">
//         <p>Clients</p>
//       </NavItem>
//       <NavSection>
//         <p>Finance</p>
//         <NavItem route="/finance/income">
//           <p>Income</p>
//         </NavItem>
//         <NavItem route="/finance/income">
//           <p>Payments</p>
//         </NavItem>
//       </NavSection>
//     </Navbar>
//   )
// }

const callAll =
  (...fns) =>
  (...args) =>
    fns.forEach(fn => fn && fn(...args))

const SidebarContext = createContext(null)

function SidebarBase({...props}) {
  const [isOpen, setIsOpen] = useState(false)
  return <SidebarContext.Provider value={[isOpen, setIsOpen]} {...props} />
}

function SidebarToggle({children: child}) {
  const [isOpen, setIsOpen] = useContext(SidebarContext)
  return cloneElement(child, {
    onClick: callAll(() => setIsOpen(!isOpen), child.props.onClick),
  })
}
